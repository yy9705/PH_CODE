C51 COMPILER V9.60.0.0   MAIN                                                              07/01/2021 15:16:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) TABS(2) OBJECT(.\list\main.obj)

line level    source

   1          /******************************************
   2            ×÷Õß£ºÉñÃØ²Ø±¦ÊÒ
   3            µêÆÌ£ºILoveMCU.taobao.com
   4          ******************************************/
   5          
   6          
   7          #include  "config.h"
   8          #include  "delay.h"
   9          #include  "uart.h"
  10          
  11          /*************  ¹¦ÄÜËµÃ÷  **************
  12          
  13          ±¾³ÌÐòÑÝÊ¾LEDÉÁË¸  
  14          
  15          
  16          ******************************************/
  17          
  18          /*************  ±¾µØ³£Á¿ÉùÃ÷  **************/
  19          sbit DQ=P1^0;         //Êý¾Ý´«ÊäÏß½Óµ¥Æ¬»úµÄÏàÓ¦µÄÒý½Å 
  20          
  21          
  22          /*************  ±¾µØ±äÁ¿ÉùÃ÷  **************/
  23          
  24          
  25          /*************  ±¾µØº¯ÊýÉùÃ÷  **************/
  26          
  27          
  28          
  29          /*************  Íâ²¿º¯ÊýºÍ±äÁ¿ÉùÃ÷ *****************/
  30          
  31          
  32          
  33          /******************** IOÅäÖÃº¯Êý **************************/
  34          void  GPIO_config(void)
  35          {
  36   1        P1M0 = 0x00;    //ÉèÖÃ×¼Ë«Ïò¿Ú
  37   1        P1M1 = 0x00;
  38   1      
  39   1        P3M0 = 0x00;
  40   1        P3M1 = 0x00;
  41   1      }
  42          
  43          void Init_DS18B20(void) 
  44          {
  45   1      //  bit x;
  46   1        DQ=1;           //DQÏÈÖÃ¸ß 
  47   1        delay_us(12);
  48   1        DQ=0;           //·¢ËÍ¸´Î»Âö³å 
  49   1        delay_us(600);        //ÑÓÊ±£¨>480us)
  50   1        //delay_ms(1);
  51   1        DQ=1;
  52   1        delay_us(15);
  53   1      //  x=DQ;
  54   1      //  printf("x=%d\r\n", x);
C51 COMPILER V9.60.0.0   MAIN                                                              07/01/2021 15:16:08 PAGE 2   

  55   1        delay_us(200);
  56   1      }
  57          
  58          //¶ÁÒ»¸ö×Ö½Ú
  59          unsigned char ReadOneChar(void)       //Ö÷»úÊý¾ÝÏßÏÈ´Ó¸ßÀ­ÖÁµÍµçÆ½1usÒÔÉÏ£¬ÔÙÊ¹Êý¾ÝÏßÉýÎª¸ßµçÆ½£¬´Ó¶ø²úÉú¶ÁÐ
             -ÅºÅ
  60          {
  61   1        unsigned char i=0;    //Ã¿¸ö¶ÁÖÜÆÚ×î¶ÌµÄ³ÖÐøÊ±¼äÎª60us£¬¸÷¸ö¶ÁÖÜÆÚÖ®¼ä±ØÐëÓÐ1usÒÔÉÏµÄ¸ßµçÆ½»Ö¸´ÆÚ
  62   1        unsigned char dat=0; 
  63   1        for (i=8;i>0;i--)     //Ò»¸ö×Ö½ÚÓÐ8Î» 
  64   1        {
  65   2          DQ=0;
  66   2          delay_us(5);
  67   2          dat>>=1; 
  68   2          DQ=1;
  69   2          delay_us(5);  
  70   2          if(DQ) 
  71   2          dat|=0x80; 
  72   2          delay_us(50);
  73   2        } 
  74   1        return(dat);
  75   1      }
  76          
  77          //Ð´Ò»¸ö×Ö½Ú
  78          void WriteOneChar(unsigned char dat) 
  79          { 
  80   1        unsigned char i;    //Êý¾ÝÏß´Ó¸ßµçÆ½À­ÖÁµÍµçÆ½£¬²úÉúÐ´ÆðÊ¼ÐÅºÅ¡£15usÖ®ÄÚ½«ËùÐèÐ´µÄÎ»ËÍµ½Êý¾ÝÏßÉÏ£¬
  81   1        unsigned char temp;
  82   1        for(i=0;i<8;i++)    //ÔÚ15~60usÖ®¼ä¶ÔÊý¾ÝÏß½øÐÐ²ÉÑù£¬Èç¹ûÊÇ¸ßµçÆ½¾ÍÐ´1£¬µÍÐ´0·¢Éú¡£ 
  83   1        {
  84   2          temp=dat>>i;
  85   2          temp &= 0x01;
  86   2          DQ=0;         //ÔÚ¿ªÊ¼ÁíÒ»¸öÐ´ÖÜÆÚÇ°±ØÐëÓÐ1usÒÔÉÏµÄ¸ßµçÆ½»Ö¸´ÆÚ¡£ 
  87   2      //    DQ=dat&0x01; 
  88   2          delay_us(5);
  89   2          if(temp == 1)
  90   2          DQ=1;
  91   2          delay_us(55);
  92   2      //    dat>>=1;
  93   2          DQ=1;
  94   2          delay_us(5);
  95   2        } 
  96   1      }
  97          
  98          //¶ÁÎÂ¶ÈÖµ£¨µÍÎ»·ÅtempL;¸ßÎ»·ÅtempH;£©
  99          float ReadTemperature(void) 
 100          { 
 101   1        short s_tem;
 102   1        float result;
 103   1        unsigned char temp[2];    //ÓÃÓÚ´æ·ÅÔ­Ê¼¶ÁÊý
 104   1        
 105   1        Init_DS18B20();           //³õÊ¼»¯
 106   1        WriteOneChar(0xcc);         //Ìø¹ý¶ÁÐòÁÐºÅµÄ²Ù×÷
 107   1        WriteOneChar(0x44);         //Æô¶¯ÎÂ¶È×ª»»
 108   1        delay_ms(200);            //×ª»»ÐèÒªÒ»µãÊ±¼ä£¬ÑÓÊ± 
 109   1        Init_DS18B20();           //³õÊ¼»¯
 110   1        WriteOneChar(0xcc);         //Ìø¹ý¶ÁÐòÁÐºÅµÄ²Ù×÷ 
 111   1        WriteOneChar(0xbe);         //¶ÁÎÂ¶È¼Ä´æÆ÷£¨Í·Á½¸öÖµ·Ö±ðÎªÎÂ¶ÈµÄµÍÎ»ºÍ¸ßÎ»£© 
 112   1        temp[0]=ReadOneChar();        //¶Á³öÎÂ¶ÈµÄµÍÎ»LSB
 113   1        temp[1]=ReadOneChar();        //¶Á³öÎÂ¶ÈµÄ¸ßÎ»MSB 
 114   1        s_tem=temp[1]<<8;
 115   1        s_tem=s_tem | temp[0];
C51 COMPILER V9.60.0.0   MAIN                                                              07/01/2021 15:16:08 PAGE 3   

 116   1        s_tem=s_tem&4095;
 117   1        if((s_tem&2048) == 2048)
 118   1        {
 119   2          s_tem=(s_tem^4095)&4095;
 120   2          result=-1*(s_tem+1)*0.0625;
 121   2        }
 122   1      //  xiaoshu1 = (temp[0]&0x0f)*10/16;    //Ð¡ÊýµÚÒ»Î»
 123   1      //  xiaoshu2 = (temp[1]&0x0f)*100/16%10;  //Ð¡ÊýµÚ¶þÎ»
 124   1      //  xiaoshu=xiaoshu1*10+xiaoshu2;     //Ð¡ÊýÁ½Î»
 125   1        else
 126   1        result=s_tem*0.0625;
 127   1        
 128   1        return  result; 
 129   1      }
 130          
 131          
 132          
 133          
 134          /******************** Ö÷º¯Êý **************************/
 135          int main(void)
 136          {
 137   1        float temp_result;
 138   1        P_SW1 = 0x00; //RXD/P3.0, TXD/P3.1
 139   1      
 140   1        GPIO_config();
 141   1        Uart_Init();
 142   1        
 143   1        while(1)
 144   1        {
 145   2          temp_result=ReadTemperature();
 146   2          //delay_ms(200);
 147   2          printf("Temperuture Get is:%f\n", temp_result);
 148   2        }
 149   1      }
 150          //
 151          //
 152          //
 153          //
 154          //
 155          //#include "reg51.h"
 156          //#include "intrins.h"
 157          //sfr P0M1 = 0x93;
 158          //sfr P0M0 = 0x94;
 159          //sfr P1M1 = 0x91;
 160          //sfr P1M0 = 0x92;
 161          //sfr P2M1 = 0x95;
 162          //sfr P2M0 = 0x96;
 163          //sfr P3M1 = 0xb1;
 164          //sfr P3M0 = 0xb2;
 165          //sfr P4M1 = 0xb3;
 166          //sfr P4M0 = 0xb4;
 167          //sfr P5M1 = 0xc9;
 168          //sfr P5M0 = 0xca;
 169          //sfr IAP_DATA = 0xC2;
 170          //sfr IAP_ADDRH = 0xC3;
 171          //sfr IAP_ADDRL = 0xC4;
 172          //sfr IAP_CMD = 0xC5;
 173          //sfr IAP_TRIG = 0xC6;
 174          //sfr IAP_CONTR = 0xC7;
 175          //sfr IAP_TPS = 0xF5;
 176          //void IapIdle()
 177          //{
C51 COMPILER V9.60.0.0   MAIN                                                              07/01/2021 15:16:08 PAGE 4   

 178          //IAP_CONTR = 0; //¹Ø±Õ IAP ¹¦ÄÜ
 179          //IAP_CMD = 0; //Çå³ýÃüÁî¼Ä´æÆ÷
 180          //IAP_TRIG = 0; //Çå³ý´¥·¢¼Ä´æÆ÷
 181          //IAP_ADDRH = 0x80; //½«µØÖ·ÉèÖÃµ½·Ç IAP ÇøÓò
 182          //IAP_ADDRL = 0;
 183          //}
 184          //char IapRead(int addr)
 185          //{
 186          //char dat;
 187          //IAP_CONTR = 0x80; //Ê¹ÄÜ IAP
 188          //IAP_TPS = 12; //ÉèÖÃ²Á³ýµÈ´ý²ÎÊý 12MHz
 189          //IAP_CMD = 1; //ÉèÖÃ IAP ¶ÁÃüÁî
 190          //IAP_ADDRL = addr; //ÉèÖÃ IAP µÍµØÖ·
 191          //IAP_ADDRH = addr >> 8; //ÉèÖÃ IAP ¸ßµØÖ·
 192          //IAP_TRIG = 0x5a; //Ð´´¥·¢ÃüÁî(0x5a)
 193          //IAP_TRIG = 0xa5; //Ð´´¥·¢ÃüÁî(0xa5)
 194          //_nop_();
 195          //dat = IAP_DATA; //¶Á IAP Êý¾Ý
 196          //IapIdle(); //¹Ø±Õ IAP ¹¦ÄÜ
 197          //
 198          //return dat;
 199          //}
 200          //void IapProgram(int addr, char dat)
 201          //{
 202          //IAP_CONTR = 0x80; //Ê¹ÄÜ IAP
 203          //IAP_TPS = 12; //ÉèÖÃ²Á³ýµÈ´ý²ÎÊý 12MHz
 204          //IAP_CMD = 2; //ÉèÖÃ IAP Ð´ÃüÁî
 205          //IAP_ADDRL = addr; //ÉèÖÃ IAP µÍµØÖ·
 206          //IAP_ADDRH = addr >> 8; //ÉèÖÃ IAP ¸ßµØÖ·
 207          //IAP_DATA = dat; //Ð´ IAP Êý¾Ý
 208          //IAP_TRIG = 0x5a; //Ð´´¥·¢ÃüÁî(0x5a)
 209          //IAP_TRIG = 0xa5; //Ð´´¥·¢ÃüÁî(0xa5)
 210          //_nop_();
 211          //IapIdle(); //¹Ø±Õ IAP ¹¦ÄÜ
 212          //}
 213          //void IapErase(int addr)
 214          //{
 215          //  IAP_CONTR = 0x80; //Ê¹ÄÜ IAP
 216          //  IAP_TPS = 12; //ÉèÖÃ²Á³ýµÈ´ý²ÎÊý 12MHz
 217          //  IAP_CMD = 3; //ÉèÖÃ IAP ²Á³ýÃüÁî
 218          //  IAP_ADDRL = addr; //ÉèÖÃ IAP µÍµØÖ·
 219          //  IAP_ADDRH = addr >> 8; //ÉèÖÃ IAP ¸ßµØÖ·
 220          //  IAP_TRIG = 0x5a; //Ð´´¥·¢ÃüÁî(0x5a)
 221          //  IAP_TRIG = 0xa5; //Ð´´¥·¢ÃüÁî(0xa5)
 222          //  _nop_(); //
 223          //  IapIdle(); //¹Ø±Õ IAP ¹¦ÄÜ
 224          //}
 225          //void main()
 226          //{
 227          //  P0M0 = 0x00;
 228          //  P0M1 = 0x00;
 229          //  P1M0 = 0x00;
 230          //  P1M1 = 0x00;
 231          //  P2M0 = 0x00;
 232          //  P2M1 = 0x00;
 233          //  P3M0 = 0x00;
 234          //  P3M1 = 0x00;
 235          //  P4M0 = 0x00;
 236          //  P4M1 = 0x00;
 237          //  P5M0 = 0x00;
 238          //  P5M1 = 0x00;
 239          //  IapErase(0x0400);
C51 COMPILER V9.60.0.0   MAIN                                                              07/01/2021 15:16:08 PAGE 5   

 240          //  P0 = IapRead(0x0400); //P0=0xff
 241          //  IapProgram(0x0400, 0x12);
 242          //  P1 = IapRead(0x0400); //P1=0x12
 243          //  while (1);
 244          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    350    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
