###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             03/Jun/2019  15:19:22 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\ #
#                          zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSta #
#                          ck-2.5.1a\Projects\zstack\Samples\SampleApp\Source #
#                          \SampleApp.c                                       #
#    Command line       =  -f "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\C #
#                          ode\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"       #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\C #
#                          ode\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"      #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆ #
#                          Ì²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee                     #
#                          cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5. #
#                          1a\Projects\zstack\Samples\SampleApp\Source\Sample #
#                          App.c" -D ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D  #
#                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\CoordinatorEB\List\" -lA                       #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\CoordinatorEB\List\" --diag_suppress           #
#                          Pe001,Pa010 -o "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH #
#                          ´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZS #
#                          tack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\CoordinatorEB\Obj\" -e          #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\C #
#                          ode\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\" -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ #
#                          ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStac #
#                          k-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\..\Source\" -I                     #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\ZMain\TI2530DB\" -I                   #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\hal\include\" -I     #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\hal\target\CC2530EB\ #
#                          " -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é #
#                          \Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1 #
#                          a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\..\..\Components\mac\include\"   #
#                          -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\C #
#                          ode\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\..\..\..\..\..\Components\mac\high_level\"  #
#                          -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\C #
#                          ode\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\..\..\..\..\..\Components\mac\low_level\srf #
#                          04\" -I "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä #
#                          £¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2. #
#                          5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\Components\mac\low_leve #
#                          l\srf04\single_chip\" -I                           #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\mt\" -I              #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\osal\include\" -I    #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\services\saddr\" -I  #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\services\sdata\" -I  #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\af\" -I        #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\nwk\" -I       #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\sapi\" -I      #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\sec\" -I       #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\sys\" -I       #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\stack\zdo\" -I       #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\zmac\" -I            #
#                          "E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code #
#                          \zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSt #
#                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\zmac\f8w\" -Ohz      #
#    List file          =  E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\ #
#                          zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSta #
#                          ck-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530 #
#                          DB\CoordinatorEB\List\SampleApp.lst                #
#    Object file        =  E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\ #
#                          zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZSta #
#                          ck-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530 #
#                          DB\CoordinatorEB\Obj\SampleApp.r51                 #
#                                                                             #
#                                                                             #
###############################################################################

E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          /*********************************************************************
      2           * INCLUDES
      3           */
      4          
      5          #include <stdio.h>
      6          #include <string.h>
      7          #include "AF.h"
      8          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      9          #include "OSAL_Tasks.h"
     10          #include "SampleApp.h"
     11          #include "ZDApp.h"
     12          #include "ZDObject.h"
     13          #include "ZDProfile.h"
     14          
     15          #include "hal_drivers.h"
     16          #include "hal_key.h"
     17          #if defined ( LCD_SUPPORTED )
     18            #include "hal_lcd.h"
     19          #endif
     20          #include "hal_led.h"
     21          #include "hal_uart.h"
     22          #include "hal_adc.h"
     23          #include "ds18b20.h"
     24          
     25          
     26          /*********************************************************************
     27           * MACROS
     28           */
     29          
     30          /*********************************************************************
     31           * CONSTANTS
     32           */
     33          
     34          #if !defined( SAMPLE_APP_PORT )
     35          #define SAMPLE_APP_PORT  0
     36          #endif
     37          
     38          #if !defined( SAMPLE_APP_BAUD )
     39            #define SAMPLE_APP_BAUD  HAL_UART_BR_115200
     40          #endif
     41          
     42          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     43          #if !defined( SAMPLE_APP_THRESH )
     44          #define SAMPLE_APP_THRESH  64
     45          #endif
     46          
     47          #if !defined( SAMPLE_APP_RX_SZ )
     48          #define SAMPLE_APP_RX_SZ  128
     49          #endif
     50          
     51          #if !defined( SAMPLE_APP_TX_SZ )
     52          #define SAMPLE_APP_TX_SZ  128
     53          #endif
     54          
     55          // Millisecs of idle time after a byte is received before invoking Rx callback.
     56          #if !defined( SAMPLE_APP_IDLE )
     57          #define SAMPLE_APP_IDLE  6
     58          #endif
     59          
     60          // Loopback Rx bytes to Tx for throughput testing.
     61          #if !defined( SAMPLE_APP_LOOPBACK )
     62          #define SAMPLE_APP_LOOPBACK  FALSE
     63          #endif
     64          
     65          // This is the max byte count per OTA message.
     66          #if !defined( SAMPLE_APP_TX_MAX )
     67          #define SAMPLE_APP_TX_MAX  80
     68          #endif
     69          
     70          #define SAMPLE_APP_RSP_CNT  4
     71          
     72          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     73          const cId_t SampleApp_ClusterList[SAMPLE_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
     74          {
     75            SAMPLEAPP_P2P_CLUSTERID,
     76            SAMPLEAPP_PERIODIC_CLUSTERID,
     77          };
     78          

   \                                 In  segment XDATA_ROM_C, align 1
     79          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   0B           DB 11
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
     80          {
     81            SAMPLEAPP_ENDPOINT,              //  int   Endpoint;
     82            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     83            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     84            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     85            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     86            SAMPLE_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     87            (cId_t *)SampleApp_ClusterList,  //  byte *pAppInClusterList;
     88            SAMPLE_MAX_CLUSTERS,          //  byte  AppNumOutClusters;
     89            (cId_t *)SampleApp_ClusterList   //  byte *pAppOutClusterList;
     90          };
     91          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     92          endPointDesc_t SampleApp_epDesc =
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for SampleApp_epDesc>`
   \   000006                REQUIRE __INIT_XDATA_I
     93          {
     94            SAMPLEAPP_ENDPOINT,
     95           &SampleApp_TaskID,
     96            (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc,
     97            noLatencyReqs
     98          };
     99          
    100          /*********************************************************************
    101           * TYPEDEFS
    102           */
    103          
    104          /*********************************************************************
    105           * GLOBAL VARIABLES
    106           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    107          devStates_t SampleApp_NwkState;   
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    108          uint8 SampleApp_TaskID;           // Task ID for internal task/event processing.
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    109          
    110          /*********************************************************************
    111           * EXTERNAL VARIABLES
    112           */
    113          
    114          /*********************************************************************
    115           * EXTERNAL FUNCTIONS
    116           */
    117          
    118          /*********************************************************************
    119           * LOCAL VARIABLES
    120           */
    121          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    122          static uint8 SampleApp_MsgID;
   \                     SampleApp_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    123          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    124          afAddrType_t SampleApp_Periodic_DstAddr; //¹ã²¥
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    125          afAddrType_t SampleApp_Flash_DstAddr;    //×é²¥
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    126          afAddrType_t SampleApp_P2P_DstAddr;      //µã²¥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    127          
    128          
    129          static afAddrType_t SampleApp_TxAddr;
    130          static uint8 SampleApp_TxSeq;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    131          static uint8 SampleApp_TxBuf[SAMPLE_APP_TX_MAX+1];
   \                     SampleApp_TxBuf:
   \   000000                DS 81
   \   000051                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    132          static uint8 SampleApp_TxLen;
   \                     SampleApp_TxLen:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    133          
    134          static afAddrType_t SampleApp_RxAddr;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    135          static uint8 SampleApp_RxSeq;
   \                     SampleApp_RxSeq:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    136          static uint8 SampleApp_RspBuf[SAMPLE_APP_RSP_CNT];
    137          
    138          /*********************************************************************
    139           * LOCAL FUNCTIONS
    140           */
    141          
    142          static void SampleApp_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    143          void SampleApp_CallBack(uint8 port, uint8 event); 
    144          static void SampleApp_Send_P2P_Message( void );
    145          
    146          
    147          /*********************************************************************
    148           * @fn      SampleApp_Init
    149           *
    150           * @brief   This is called during OSAL tasks' initialization.
    151           *
    152           * @param   task_id - the Task ID assigned by OSAL.
    153           *
    154           * @return  none
    155           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    156          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    157          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    158            halUARTCfg_t uartConfig;
    159          
    160            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    161            SampleApp_RxSeq = 0xC3;
   \   00000B   90....       MOV     DPTR,#SampleApp_RxSeq
   \   00000E   74C3         MOV     A,#-0x3d
   \   000010   F0           MOVX    @DPTR,A
    162            SampleApp_NwkState = DEV_INIT;       
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   7401         MOV     A,#0x1
   \   000016   F0           MOVX    @DPTR,A
    163          
    164            MT_UartInit();                  //´®¿Ú³õÊ¼»¯
                   ^
Warning[Pe223]: function "MT_UartInit" declared implicitly
   \   000017                ; Setup parameters for call to function MT_UartInit
   \   000017   12....       LCALL   ??MT_UartInit?relay
    165            MT_UartRegisterTaskID(task_id); //×¢²á´®¿ÚÈÎÎñ
                   ^
Warning[Pe223]: function "MT_UartRegisterTaskID" declared implicitly
   \   00001A                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   00001A   8E..         MOV     ?V0 + 0,R6
   \   00001C   AA..         MOV     R2,?V0 + 0
   \   00001E   7B00         MOV     R3,#0x0
   \   000020   12....       LCALL   ??MT_UartRegisterTaskID?relay
    166            afRegister( (endPointDesc_t *)&SampleApp_epDesc );
   \   000023                ; Setup parameters for call to function afRegister
   \   000023   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   000025   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000027   12....       LCALL   ??afRegister?relay
    167            RegisterForKeys( task_id );
   \   00002A                ; Setup parameters for call to function RegisterForKeys
   \   00002A   EE           MOV     A,R6
   \   00002B   F9           MOV     R1,A
   \   00002C   12....       LCALL   ??RegisterForKeys?relay
    168          
    169          #ifdef ZDO_COORDINATOR
    170            //Ð­µ÷Æ÷³õÊ¼»¯
    171            
    172            //·ê·äÃùÆ÷³õÊ¼»¯
    173          
    174            P0SEL &= ~0x80;                 //ÉèÖÃP07ÎªÆÕÍ¨IO¿Ú
   \   00002F   53F37F       ANL     0xf3,#0x7f
    175            P0DIR |= 0x80;                 //P07¶¨ÒåÎªÊä³ö¿Ú
   \   000032   43FD80       ORL     0xfd,#0x80
    176          
    177            //Ä¬ÈÏ·äÃùÆ÷²»Ïì
    178            P0_7=1;  
   \   000035   D287         SETB    0x80.7
    179          
    180          #else
    181            //ÖÕ¶Ë³õÊ¼»¯
    182          
    183            //P15ÊÇ¹âÃô´«¸ÐÆ÷µÄDOÒý½Å
    184          
    185            P1SEL &= ~0x20;                 //ÉèÖÃP1.5ÎªÆÕÍ¨IO¿Ú
    186            P1DIR &= ~0x20;                 //P1.5¶¨ÒåÎªÊäÈë¿Ú
    187          #endif
    188          
    189          
    190            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;//¹ã²¥
   \   000037   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   00003A   740F         MOV     A,#0xf
   \   00003C   F0           MOVX    @DPTR,A
    191            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00003D   A3           INC     DPTR
   \   00003E   740B         MOV     A,#0xb
   \   000040   F0           MOVX    @DPTR,A
    192            SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;
   \   000041   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   000044   74FF         MOV     A,#-0x1
   \   000046   F0           MOVX    @DPTR,A
   \   000047   A3           INC     DPTR
   \   000048   F0           MOVX    @DPTR,A
    193          
    194            // Setup for the flash command's destination address - Group 1
    195            SampleApp_Flash_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;//×é²¥
   \   000049   90....       MOV     DPTR,#SampleApp_Flash_DstAddr + 8
   \   00004C   7401         MOV     A,#0x1
   \   00004E   F0           MOVX    @DPTR,A
    196            SampleApp_Flash_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00004F   A3           INC     DPTR
   \   000050   740B         MOV     A,#0xb
   \   000052   F0           MOVX    @DPTR,A
    197            SampleApp_Flash_DstAddr.addr.shortAddr = SAMPLEAPP_FLASH_GROUP;
   \   000053   90....       MOV     DPTR,#SampleApp_Flash_DstAddr
   \   000056   7401         MOV     A,#0x1
   \   000058   F0           MOVX    @DPTR,A
   \   000059   A3           INC     DPTR
   \   00005A   E4           CLR     A
   \   00005B   F0           MOVX    @DPTR,A
    198            
    199            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥ 
   \   00005C   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   00005F   7402         MOV     A,#0x2
   \   000061   F0           MOVX    @DPTR,A
    200            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   000062   A3           INC     DPTR
   \   000063   740B         MOV     A,#0xb
   \   000065   F0           MOVX    @DPTR,A
    201            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //·¢¸øÐ­µ÷Æ÷
   \   000066   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   000069   E4           CLR     A
   \   00006A   F0           MOVX    @DPTR,A
   \   00006B   A3           INC     DPTR
   \   00006C   F0           MOVX    @DPTR,A
    202          
    203            
    204          }
   \   00006D                REQUIRE ?Subroutine0
   \   00006D                REQUIRE P0SEL
   \   00006D                REQUIRE P0DIR
   \   00006D                REQUIRE _A_P0
   \   00006D                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    205          
    206          /*********************************************************************
    207           * @fn      SampleApp_ProcessEvent
    208           *
    209           * @brief   Generic Application Task event processor.
    210           *
    211           * @param   task_id  - The OSAL assigned task ID.
    212           * @param   events   - Bit map of events to process.
    213           *
    214           * @return  Event flags of all unprocessed events.
    215           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    216          UINT16 SampleApp_ProcessEvent( uint8 task_id, UINT16 events )
   \                     SampleApp_ProcessEvent:
    217          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    218            (void)task_id;  // Intentionally unreferenced parameter
    219            
    220            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   704C         JNZ     ??SampleApp_ProcessEvent_0
    221            {
    222              afIncomingMSGPacket_t *MSGpkt;
    223          
    224              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID )) )
    225              {
    226                switch ( MSGpkt->hdr.event )
    227                {
    228                case AF_INCOMING_MSG_CMD:
    229                  SampleApp_ProcessMSGCmd( MSGpkt );
    230                  break;
    231                  
    232                case ZDO_STATE_CHANGE:
    233                  SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
    234                  if ( //(SampleApp_NwkState == DEV_ZB_COORD)||
    235                      (SampleApp_NwkState == DEV_ROUTER)
    236                      || (SampleApp_NwkState == DEV_END_DEVICE) )
    237                  {
    238                      
    239                      osal_start_timerEx( SampleApp_TaskID,
    240                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    241                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
    242                  }
    243                  else
    244                  {
    245                    // Device is no longer in the network
    246                  }
    247                  break;
    248          
    249                default:
    250                  break;
    251                }
    252          
    253                osal_msg_deallocate( (uint8 *)MSGpkt );
    254              }
    255          
    256              return ( events ^ SYS_EVENT_MSG );
    257            }
    258          
    259            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   5074         JNC     ??SampleApp_ProcessEvent_1
    260            {
    261              // ²É¼¯º¯Êý
    262              SampleApp_Send_P2P_Message();
   \   000012                ; Setup parameters for call to function SampleApp_Send_P2P_Message
   \   000012   12....       LCALL   ??SampleApp_Send_P2P_Message?relay
    263          
    264              //ÔÙ´ÎÆô¶¯¶¨Ê±Æ÷
    265              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    266                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   000015                ; Setup parameters for call to function osal_rand
   \   000015   12....       LCALL   ??osal_rand?relay
   \   000018                ; Setup parameters for call to function osal_start_timerEx
   \   000018   EA           MOV     A,R2
   \   000019   24F4         ADD     A,#-0xc
   \   00001B   FC           MOV     R4,A
   \   00001C   E4           CLR     A
   \   00001D   3401         ADDC    A,#0x1
   \   00001F   FD           MOV     R5,A
   \   000020   7A01         MOV     R2,#0x1
   \   000022   7B00         MOV     R3,#0x0
   \   000024   90....       MOV     DPTR,#SampleApp_TaskID
   \   000027   E0           MOVX    A,@DPTR
   \   000028   F9           MOV     R1,A
   \   000029   12....       LCALL   ??osal_start_timerEx?relay
    267          
    268              // return unprocessed events
    269              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   00002C   EE           MOV     A,R6
   \   00002D   6401         XRL     A,#0x1
   \   00002F   FA           MOV     R2,A
   \   000030   EF           MOV     A,R7
   \   000031   8050         SJMP    ??SampleApp_ProcessEvent_2
    270            }
   \                     ??SampleApp_ProcessEvent_3:
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   90....       MOV     DPTR,#SampleApp_NwkState
   \   000038   F0           MOVX    @DPTR,A
   \   000039   6407         XRL     A,#0x7
   \   00003B   6005         JZ      ??SampleApp_ProcessEvent_4
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   6406         XRL     A,#0x6
   \   000040   7010         JNZ     ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_4:
   \   000042                ; Setup parameters for call to function osal_start_timerEx
   \   000042   7CF4         MOV     R4,#-0xc
   \   000044   7D01         MOV     R5,#0x1
   \   000046   7A01         MOV     R2,#0x1
   \   000048   7B00         MOV     R3,#0x0
   \   00004A   90....       MOV     DPTR,#SampleApp_TaskID
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   F9           MOV     R1,A
   \   00004F   12....       LCALL   ??osal_start_timerEx?relay
   \                     ??SampleApp_ProcessEvent_5:
   \   000052                ; Setup parameters for call to function osal_msg_deallocate
   \   000052   AA..         MOV     R2,?V0 + 0
   \   000054   AB..         MOV     R3,?V0 + 1
   \   000056   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??SampleApp_ProcessEvent_0:
   \   000059                ; Setup parameters for call to function osal_msg_receive
   \   000059   90....       MOV     DPTR,#SampleApp_TaskID
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   F9           MOV     R1,A
   \   00005E   12....       LCALL   ??osal_msg_receive?relay
   \   000061   8A..         MOV     ?V0 + 0,R2
   \   000063   8B..         MOV     ?V0 + 1,R3
   \   000065   EA           MOV     A,R2
   \   000066   45..         ORL     A,?V0 + 1
   \   000068   6014         JZ      ??SampleApp_ProcessEvent_6
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   24E6         ADD     A,#-0x1a
   \   000071   6006         JZ      ??SampleApp_ProcessEvent_7
   \   000073   2449         ADD     A,#0x49
   \   000075   60BC         JZ      ??SampleApp_ProcessEvent_3
   \   000077   80D9         SJMP    ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_7:
   \   000079                ; Setup parameters for call to function SampleApp_ProcessMSGCmd
   \   000079   12....       LCALL   ??SampleApp_ProcessMSGCmd?relay
   \   00007C   80D4         SJMP    ??SampleApp_ProcessEvent_5
   \                     ??SampleApp_ProcessEvent_6:
   \   00007E   EE           MOV     A,R6
   \   00007F   FA           MOV     R2,A
   \   000080   EF           MOV     A,R7
   \   000081   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_2:
   \   000083   FB           MOV     R3,A
   \   000084   8004         SJMP    ??SampleApp_ProcessEvent_8
    271          
    272          
    273            return ( 0 );  // Discard unknown events.
   \                     ??SampleApp_ProcessEvent_1:
   \   000086   7A00         MOV     R2,#0x0
   \   000088   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_8:
   \   00008A   7F04         MOV     R7,#0x4
   \   00008C   02....       LJMP    ?BANKED_LEAVE_XDATA
    274          }
    275          
    276          /*********************************************************************
    277           * @fn      SerialApp_ProcessMSGCmd
    278           *
    279           * @brief   Data message processor callback. This function processes
    280           *          any incoming data - probably from other devices. Based
    281           *          on the cluster ID, perform the intended action.
    282           *
    283           * @param   pkt - pointer to the incoming message packet
    284           *
    285           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    286           *          FALSE otherwise.
    287           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    288          void SampleApp_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_ProcessMSGCmd:
    289          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 20
   \   000004   74EC         MOV     A,#-0x14
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
    290            uint8 buff1[10]={0};
   \   000009   85..82       MOV     DPL,?XSP + 0
   \   00000C   85..83       MOV     DPH,?XSP + 1
   \   00000F   AC82         MOV     R4,DPL
   \   000011   AD83         MOV     R5,DPH
   \   000013   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000016   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   000019   740A         MOV     A,#0xa
   \   00001B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    291            uint8 buff2[10]={0};
   \   00001E   740A         MOV     A,#0xa
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   AC82         MOV     R4,DPL
   \   000025   AD83         MOV     R5,DPH
   \   000027   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   00002A   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   00002D   740A         MOV     A,#0xa
   \   00002F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    292            uint8 Temp_buff1[20]={0};
    293            uint8 Temp_buff2[20]={0};
    294            switch ( pkt->clusterId )
   \   000032   8A82         MOV     DPL,R2
   \   000034   8B83         MOV     DPH,R3
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   6401         XRL     A,#0x1
   \   00003D   7002         JNZ     ??SampleApp_ProcessMSGCmd_0
   \   00003F   A3           INC     DPTR
   \   000040   E0           MOVX    A,@DPTR
   \                     ??SampleApp_ProcessMSGCmd_0:
   \   000041   6003         JZ      $+5
   \   000043   02....       LJMP    ??SampleApp_ProcessMSGCmd_1 & 0xFFFF
    295            {
    296            case SAMPLEAPP_P2P_CLUSTERID: 
    297              {
    298                // ½ÓÊÕÖÕ¶ËÉÏ´«µÄÊý¾Ý
    299          
    300                //Ð­µ÷Æ÷´¦Àí     
    301                 buff1[0]=pkt->cmd.Data[0];
   \   000046   EA           MOV     A,R2
   \   000047   2422         ADD     A,#0x22
   \   000049   F8           MOV     R0,A
   \   00004A   EB           MOV     A,R3
   \   00004B   3400         ADDC    A,#0x0
   \   00004D   F9           MOV     R1,A
   \   00004E   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000051   E0           MOVX    A,@DPTR
   \   000052   85..82       MOV     DPL,?XSP + 0
   \   000055   85..83       MOV     DPH,?XSP + 1
   \   000058   F0           MOVX    @DPTR,A
    302                 buff1[1]=pkt->cmd.Data[1];
   \   000059   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   00005C   A3           INC     DPTR
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   C0E0         PUSH    A
   \   000060   7401         MOV     A,#0x1
   \   000062   12....       LCALL   ?XSTACK_DISP0_8
   \   000065   D0E0         POP     A
   \   000067   12....       LCALL   ?Subroutine4 & 0xFFFF
    303                 buff1[2]=pkt->cmd.Data[2];
   \                     ??CrossCallReturnLabel_7:
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   C0E0         PUSH    A
   \   00006D   7402         MOV     A,#0x2
   \   00006F   12....       LCALL   ?XSTACK_DISP0_8
   \   000072   D0E0         POP     A
   \   000074   12....       LCALL   ?Subroutine4 & 0xFFFF
    304                 buff1[3]=pkt->cmd.Data[3];
   \                     ??CrossCallReturnLabel_8:
   \   000077   A3           INC     DPTR
   \   000078   E0           MOVX    A,@DPTR
   \   000079   C0E0         PUSH    A
   \   00007B   7403         MOV     A,#0x3
   \   00007D   12....       LCALL   ?XSTACK_DISP0_8
   \   000080   D0E0         POP     A
   \   000082   12....       LCALL   ?Subroutine3 & 0xFFFF
    305                 buff1[4]=pkt->cmd.Data[4];
   \                     ??CrossCallReturnLabel_5:
   \   000085   E0           MOVX    A,@DPTR
   \   000086   C0E0         PUSH    A
   \   000088   7404         MOV     A,#0x4
   \   00008A   12....       LCALL   ?XSTACK_DISP0_8
   \   00008D   D0E0         POP     A
   \   00008F   12....       LCALL   ?Subroutine3 & 0xFFFF
    306                 buff1[5]=pkt->cmd.Data[5];
   \                     ??CrossCallReturnLabel_6:
   \   000092   A3           INC     DPTR
   \   000093   E0           MOVX    A,@DPTR
   \   000094   C0E0         PUSH    A
   \   000096   7405         MOV     A,#0x5
   \   000098   12....       LCALL   ?XSTACK_DISP0_8
   \   00009B   D0E0         POP     A
   \   00009D   12....       LCALL   ?Subroutine2 & 0xFFFF
    307                 buff1[6]=pkt->cmd.Data[6];
   \                     ??CrossCallReturnLabel_0:
   \   0000A0   2406         ADD     A,#0x6
   \   0000A2   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   0000A5   C0E0         PUSH    A
   \   0000A7   7406         MOV     A,#0x6
   \   0000A9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AC   D0E0         POP     A
   \   0000AE   12....       LCALL   ?Subroutine2 & 0xFFFF
    308                 buff1[7]=pkt->cmd.Data[7];
   \                     ??CrossCallReturnLabel_1:
   \   0000B1   2407         ADD     A,#0x7
   \   0000B3   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   0000B6   C0E0         PUSH    A
   \   0000B8   7407         MOV     A,#0x7
   \   0000BA   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BD   D0E0         POP     A
   \   0000BF   12....       LCALL   ?Subroutine2 & 0xFFFF
    309                 
    310                 buff2[0]=pkt->cmd.Data[8];
   \                     ??CrossCallReturnLabel_2:
   \   0000C2   2408         ADD     A,#0x8
   \   0000C4   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   0000C7   C0E0         PUSH    A
   \   0000C9   740A         MOV     A,#0xa
   \   0000CB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000CE   D0E0         POP     A
   \   0000D0   12....       LCALL   ?Subroutine2 & 0xFFFF
    311                 buff2[1]=pkt->cmd.Data[9];
   \                     ??CrossCallReturnLabel_3:
   \   0000D3   2409         ADD     A,#0x9
   \   0000D5   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   0000D8   C0E0         PUSH    A
   \   0000DA   740B         MOV     A,#0xb
   \   0000DC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000DF   D0E0         POP     A
   \   0000E1   12....       LCALL   ?Subroutine2 & 0xFFFF
    312                 buff2[2]=pkt->cmd.Data[10];
   \                     ??CrossCallReturnLabel_4:
   \   0000E4   240A         ADD     A,#0xa
   \   0000E6   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   0000E9   C0E0         PUSH    A
   \   0000EB   740C         MOV     A,#0xc
   \   0000ED   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F0   D0E0         POP     A
   \   0000F2   F0           MOVX    @DPTR,A
    313                 buff2[3]=pkt->cmd.Data[11];
   \   0000F3   8882         MOV     DPL,R0
   \   0000F5   8983         MOV     DPH,R1
   \   0000F7   E0           MOVX    A,@DPTR
   \   0000F8   F8           MOV     R0,A
   \   0000F9   A3           INC     DPTR
   \   0000FA   E0           MOVX    A,@DPTR
   \   0000FB   C8           XCH     A,R0
   \   0000FC   240B         ADD     A,#0xb
   \   0000FE   F582         MOV     DPL,A
   \   000100   E8           MOV     A,R0
   \   000101   12....       LCALL   ??Subroutine9_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000104   C0E0         PUSH    A
   \   000106   740D         MOV     A,#0xd
   \   000108   12....       LCALL   ?XSTACK_DISP0_8
   \   00010B   D0E0         POP     A
   \   00010D   F0           MOVX    @DPTR,A
    314          
    315                
    316                  //lcd ÏÔÊ¾
    317                  HalLcdWriteString( buff1, HAL_LCD_LINE_3 );
                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00010E                ; Setup parameters for call to function HalLcdWriteString
   \   00010E   7903         MOV     R1,#0x3
   \   000110   85..82       MOV     DPL,?XSP + 0
   \   000113   85..83       MOV     DPH,?XSP + 1
   \   000116   AA82         MOV     R2,DPL
   \   000118   AB83         MOV     R3,DPH
   \   00011A   12....       LCALL   ??HalLcdWriteString?relay
    318                  HalLcdWriteString( buff2, HAL_LCD_LINE_4);
                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00011D                ; Setup parameters for call to function HalLcdWriteString
   \   00011D   7904         MOV     R1,#0x4
   \   00011F   740A         MOV     A,#0xa
   \   000121   12....       LCALL   ?XSTACK_DISP0_8
   \   000124   AA82         MOV     R2,DPL
   \   000126   AB83         MOV     R3,DPH
   \   000128   12....       LCALL   ??HalLcdWriteString?relay
    319          
    320                  //´®¿ÚÊä³ö
    321                  HalUARTWrite(0, buff1, osal_strlen(buff1));  
                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00012B                ; Setup parameters for call to function HalUARTWrite
   \   00012B                ; Setup parameters for call to function osal_strlen
   \   00012B   85..82       MOV     DPL,?XSP + 0
   \   00012E   85..83       MOV     DPH,?XSP + 1
   \   000131   AA82         MOV     R2,DPL
   \   000133   AB83         MOV     R3,DPH
   \   000135   12....       LCALL   ??osal_strlen?relay
   \   000138   EA           MOV     A,R2
   \   000139   FC           MOV     R4,A
   \   00013A   EB           MOV     A,R3
   \   00013B   FD           MOV     R5,A
   \   00013C   85..82       MOV     DPL,?XSP + 0
   \   00013F   85..83       MOV     DPH,?XSP + 1
   \   000142   AA82         MOV     R2,DPL
   \   000144   AB83         MOV     R3,DPH
   \   000146   7900         MOV     R1,#0x0
   \   000148   12....       LCALL   ??HalUARTWrite?relay
    322                  HalUARTWrite(0, buff2, osal_strlen(buff2));
                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"

    uint8 Temp_buff1[20]={0};
          ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",292  Warning[Pe177]: 
          variable "Temp_buff1" was declared but never referenced

    uint8 Temp_buff2[20]={0};
          ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",293  Warning[Pe177]: 
          variable "Temp_buff2" was declared but never referenced
   \   00014B                ; Setup parameters for call to function HalUARTWrite
   \   00014B                ; Setup parameters for call to function osal_strlen
   \   00014B   740A         MOV     A,#0xa
   \   00014D   12....       LCALL   ?XSTACK_DISP0_8
   \   000150   AA82         MOV     R2,DPL
   \   000152   AB83         MOV     R3,DPH
   \   000154   12....       LCALL   ??osal_strlen?relay
   \   000157   EA           MOV     A,R2
   \   000158   FC           MOV     R4,A
   \   000159   EB           MOV     A,R3
   \   00015A   FD           MOV     R5,A
   \   00015B   740A         MOV     A,#0xa
   \   00015D   12....       LCALL   ?XSTACK_DISP0_8
   \   000160   AA82         MOV     R2,DPL
   \   000162   AB83         MOV     R3,DPH
   \   000164   7900         MOV     R1,#0x0
   \   000166   12....       LCALL   ??HalUARTWrite?relay
    323                  HalUARTWrite(0, "\r\n", 2);
   \   000169                ; Setup parameters for call to function HalUARTWrite
   \   000169   7C02         MOV     R4,#0x2
   \   00016B   7D00         MOV     R5,#0x0
   \   00016D   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   00016F   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   000171   7900         MOV     R1,#0x0
   \   000173   12....       LCALL   ??HalUARTWrite?relay
    324          
    325              }
    326              break;
    327          
    328            case SAMPLEAPP_PERIODIC_CLUSTERID:
    329          
    330              break;
    331          
    332              default:
    333                break;
    334            }
    335          }
   \                     ??SampleApp_ProcessMSGCmd_1:
   \   000176   7414         MOV     A,#0x14
   \   000178   12....       LCALL   ?DEALLOC_XSTACK8
   \   00017B                REQUIRE ?Subroutine1
   \   00017B                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   F582         MOV     DPL,A
   \   000002   EA           MOV     A,R2
   \   000003                REQUIRE ??Subroutine9_0
   \   000003                ; // Fall through to label ??Subroutine9_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine9_0:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F583         MOV     DPH,A
   \   000004   E0           MOVX    A,@DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000003   F583         MOV     DPH,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000003   CA           XCH     A,R2
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   FA           MOV     R2,A
   \   000007   A3           INC     DPTR
   \   000008   E0           MOVX    A,@DPTR
   \   000009   22           RET
    336          
    337          
    338          /*********************************************************************
    339           * @fn      SampleApp_CallBack
    340           *
    341           * @brief   Send data OTA.
    342           *
    343           * @param   port - UART port.
    344           * @param   event - the UART port event flag.
    345           *
    346           * @return  none
    347           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    348          void SampleApp_CallBack(uint8 port, uint8 event)
   \                     SampleApp_CallBack:
    349          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    350            (void)port;
    351          
    352            if ((event & (HAL_UART_RX_FULL | HAL_UART_RX_ABOUT_FULL | HAL_UART_RX_TIMEOUT)) &&
    353          #if SAMPLE_APP_LOOPBACK
    354                (SampleApp_TxLen < SAMPLE_APP_TX_MAX))
    355          #else
    356                !SampleApp_TxLen)
   \   000007   7407         MOV     A,#0x7
   \   000009   5E           ANL     A,R6
   \   00000A   601D         JZ      ??SampleApp_CallBack_0
   \   00000C   90....       MOV     DPTR,#SampleApp_TxLen
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   7017         JNZ     ??SampleApp_CallBack_0
    357          #endif
    358            {
    359              SampleApp_TxLen += HalUARTRead(SAMPLE_APP_PORT, SampleApp_TxBuf+SampleApp_TxLen+1,
    360                                                                SAMPLE_APP_TX_MAX-SampleApp_TxLen);
   \   000012                ; Setup parameters for call to function HalUARTRead
   \   000012   7C50         MOV     R4,#0x50
   \   000014   7D00         MOV     R5,#0x0
   \   000016   7A..         MOV     R2,#(SampleApp_TxBuf + 1) & 0xff
   \   000018   7B..         MOV     R3,#((SampleApp_TxBuf + 1) >> 8) & 0xff
   \   00001A   7900         MOV     R1,#0x0
   \   00001C   12....       LCALL   ??HalUARTRead?relay
   \   00001F   8A..         MOV     ?V0 + 0,R2
   \   000021   A8..         MOV     R0,?V0 + 0
   \   000023   90....       MOV     DPTR,#SampleApp_TxLen
   \   000026   E0           MOVX    A,@DPTR
   \   000027   28           ADD     A,R0
   \   000028   F0           MOVX    @DPTR,A
    361            }
    362          }
   \                     ??SampleApp_CallBack_0:
   \   000029   02....       LJMP    ?Subroutine0 & 0xFFFF
    363          
    364          //È¡¹âÕÕÖµ,½ÓÔÚP06ÉÏ

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    365          uint16 GetPH()
   \                     GetPH:
    366          { 
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    367              
    368              uint16 adc= HalAdcRead(HAL_ADC_CHANNEL_6, HAL_ADC_RESOLUTION_14); //ADC ²ÉÑùÖµ P06¿Ú
    369              return adc;
   \   000004                ; Setup parameters for call to function HalAdcRead
   \   000004   7A04         MOV     R2,#0x4
   \   000006   7906         MOV     R1,#0x6
   \   000008   12....       LCALL   ??HalAdcRead?relay
   \   00000B   80..         SJMP    ?Subroutine1
    370          }
    371          /*********************************************************************
    372           * @fn      SampleApp_Send_P2P_Message
    373           *
    374           * @brief   point to point.
    375           *
    376           * @param   none
    377           *
    378           * @return  none
    379           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    380          void SampleApp_Send_P2P_Message( void )
   \                     SampleApp_Send_P2P_Message:
    381          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 20
   \   000005   74EC         MOV     A,#-0x14
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    382            uint8 buff[13]={0};
   \   00000A   7407         MOV     A,#0x7
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   AC82         MOV     R4,DPL
   \   000011   AD83         MOV     R5,DPH
   \   000013   7583..       MOV     DPH,#(`?<Constant {0}>_2` >> 8) & 0xff
   \   000016   7582..       MOV     DPL,#`?<Constant {0}>_2` & 0xff
   \   000019   740D         MOV     A,#0xd
   \   00001B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    383            uint8 PH_buff[5]={0};
   \   00001E   7402         MOV     A,#0x2
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   AC82         MOV     R4,DPL
   \   000025   AD83         MOV     R5,DPH
   \   000027   7583..       MOV     DPH,#(`?<Constant {0}>_3` >> 8) & 0xff
   \   00002A   7582..       MOV     DPL,#`?<Constant {0}>_3` & 0xff
   \   00002D   7405         MOV     A,#0x5
   \   00002F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    384            uint8 Temp_buff[2]={0};
   \   000032   85..82       MOV     DPL,?XSP + 0
   \   000035   85..83       MOV     DPH,?XSP + 1
   \   000038   AC82         MOV     R4,DPL
   \   00003A   AD83         MOV     R5,DPH
   \   00003C   7583..       MOV     DPH,#(`?<Constant {0}>_4` >> 8) & 0xff
   \   00003F   7582..       MOV     DPL,#`?<Constant {0}>_4` & 0xff
   \   000042   7402         MOV     A,#0x2
   \   000044   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    385            uint16 temp;        
    386          //  uint16 PH_temp;
    387            uint16 PH;
    388            float PH_V=0.0;
    389            float PH_Value=0.0;
    390            float tempFloat;   
    391            
    392            PH=GetPH();
   \   000047                ; Setup parameters for call to function GetPH
   \   000047   12....       LCALL   ??GetPH?relay
   \   00004A   8A..         MOV     ?V0 + 0,R2
   \   00004C   8B..         MOV     ?V0 + 1,R3
    393            temp = ReadDs18B20();                //²»´øÐ¡ÊýÎÂ¶ÈÊý¾Ý
   \   00004E                ; Setup parameters for call to function ReadDs18B20
   \   00004E   12....       LCALL   ??ReadDs18B20?relay
   \   000051   E9           MOV     A,R1
   \   000052   FE           MOV     R6,A
    394            
    395            PH_V=(float)((float)(PH*3.3))/4095.0;
    396            PH_Value=-5.7541*PH_V+16.654;
   \   000053   E4           CLR     A
   \   000054   F5..         MOV     ?V0 + 2,A
   \   000056   F5..         MOV     ?V0 + 3,A
   \   000058   78..         MOV     R0,#?V0 + 0
   \   00005A   12....       LCALL   ?UL_TO_FLT
   \   00005D   90....       MOV     DPTR,#__Constant_40533333
   \   000060   78..         MOV     R0,#?V0 + 4
   \   000062   12....       LCALL   ?L_MOV_X
   \   000065   78..         MOV     R0,#?V0 + 0
   \   000067   79..         MOV     R1,#?V0 + 4
   \   000069   12....       LCALL   ?FLT_MUL
   \   00006C   90....       MOV     DPTR,#__Constant_457ff000
   \   00006F   78..         MOV     R0,#?V0 + 4
   \   000071   12....       LCALL   ?L_MOV_X
   \   000074   78..         MOV     R0,#?V0 + 0
   \   000076   79..         MOV     R1,#?V0 + 4
   \   000078   12....       LCALL   ?FLT_DIV
   \   00007B   90....       MOV     DPTR,#__Constant_c0b82196
   \   00007E   78..         MOV     R0,#?V0 + 4
   \   000080   12....       LCALL   ?L_MOV_X
   \   000083   78..         MOV     R0,#?V0 + 0
   \   000085   79..         MOV     R1,#?V0 + 4
   \   000087   12....       LCALL   ?FLT_MUL
   \   00008A   90....       MOV     DPTR,#__Constant_41853b64
   \   00008D   78..         MOV     R0,#?V0 + 4
   \   00008F   12....       LCALL   ?L_MOV_X
   \   000092   78..         MOV     R0,#?V0 + 0
   \   000094   79..         MOV     R1,#?V0 + 4
   \   000096   12....       LCALL   ?FLT_ADD
    397            
    398            if(PH_Value<=0){PH_Value=0;}
   \   000099   90....       MOV     DPTR,#__Constant_1
   \   00009C   78..         MOV     R0,#?V0 + 4
   \   00009E   12....       LCALL   ?L_MOV_X
   \   0000A1   78..         MOV     R0,#?V0 + 0
   \   0000A3   79..         MOV     R1,#?V0 + 4
   \   0000A5   12....       LCALL   ?FLT_LT
   \   0000A8   500E         JNC     ??SampleApp_Send_P2P_Message_0
   \   0000AA   75..00       MOV     ?V0 + 0,#0x0
   \   0000AD   75..00       MOV     ?V0 + 1,#0x0
   \   0000B0   75..00       MOV     ?V0 + 2,#0x0
   \   0000B3   75..00       MOV     ?V0 + 3,#0x0
   \   0000B6   801D         SJMP    ??SampleApp_Send_P2P_Message_1
    399            if(PH_Value>14){PH_Value=14;}
   \                     ??SampleApp_Send_P2P_Message_0:
   \   0000B8   90....       MOV     DPTR,#__Constant_41600001
   \   0000BB   78..         MOV     R0,#?V0 + 4
   \   0000BD   12....       LCALL   ?L_MOV_X
   \   0000C0   78..         MOV     R0,#?V0 + 0
   \   0000C2   79..         MOV     R1,#?V0 + 4
   \   0000C4   12....       LCALL   ?FLT_GE
   \   0000C7   500C         JNC     ??SampleApp_Send_P2P_Message_1
   \   0000C9   75..00       MOV     ?V0 + 0,#0x0
   \   0000CC   75..00       MOV     ?V0 + 1,#0x0
   \   0000CF   75..60       MOV     ?V0 + 2,#0x60
   \   0000D2   75..41       MOV     ?V0 + 3,#0x41
    400            
    401          //  PH_temp=PH_Value*100;
    402            buff[0]='P';
   \                     ??SampleApp_Send_P2P_Message_1:
   \   0000D5   7407         MOV     A,#0x7
   \   0000D7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000DA   7450         MOV     A,#0x50
   \   0000DC   F0           MOVX    @DPTR,A
    403            buff[1]='H';
   \   0000DD   7408         MOV     A,#0x8
   \   0000DF   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E2   7448         MOV     A,#0x48
   \   0000E4   F0           MOVX    @DPTR,A
    404            buff[2]=':';
   \   0000E5   7409         MOV     A,#0x9
   \   0000E7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EA   743A         MOV     A,#0x3a
   \   0000EC   F0           MOVX    @DPTR,A
    405            buff[3]=(int)(PH_Value*100)/1000+'0';
   \   0000ED   90....       MOV     DPTR,#__Constant_42c80000
   \   0000F0   78..         MOV     R0,#?V0 + 4
   \   0000F2   12....       LCALL   ?L_MOV_X
   \   0000F5   78..         MOV     R0,#?V0 + 0
   \   0000F7   79..         MOV     R1,#?V0 + 4
   \   0000F9   12....       LCALL   ?FLT_MUL
   \   0000FC   78..         MOV     R0,#?V0 + 0
   \   0000FE   12....       LCALL   ?FLT_TO_L
   \   000101   AC..         MOV     R4,?V0 + 0
   \   000103   AD..         MOV     R5,?V0 + 1
   \   000105   EC           MOV     A,R4
   \   000106   F8           MOV     R0,A
   \   000107   ED           MOV     A,R5
   \   000108   F9           MOV     R1,A
   \   000109   7AE8         MOV     R2,#-0x18
   \   00010B   7B03         MOV     R3,#0x3
   \   00010D   12....       LCALL   ?S_DIV_MOD
   \   000110   E8           MOV     A,R0
   \   000111   2430         ADD     A,#0x30
   \   000113   F5..         MOV     ?V0 + 0,A
   \   000115   740A         MOV     A,#0xa
   \   000117   12....       LCALL   ?XSTACK_DISP0_8
   \   00011A   E5..         MOV     A,?V0 + 0
   \   00011C   F0           MOVX    @DPTR,A
    406            buff[4]=(int)(PH_Value*100)%1000/100+'0';
   \   00011D   EC           MOV     A,R4
   \   00011E   F8           MOV     R0,A
   \   00011F   ED           MOV     A,R5
   \   000120   F9           MOV     R1,A
   \   000121   7AE8         MOV     R2,#-0x18
   \   000123   7B03         MOV     R3,#0x3
   \   000125   12....       LCALL   ?S_DIV_MOD
   \   000128   EA           MOV     A,R2
   \   000129   F8           MOV     R0,A
   \   00012A   EB           MOV     A,R3
   \   00012B   F9           MOV     R1,A
   \   00012C   7A64         MOV     R2,#0x64
   \   00012E   7B00         MOV     R3,#0x0
   \   000130   12....       LCALL   ?S_DIV_MOD
   \   000133   E8           MOV     A,R0
   \   000134   2430         ADD     A,#0x30
   \   000136   F5..         MOV     ?V0 + 1,A
   \   000138   740B         MOV     A,#0xb
   \   00013A   12....       LCALL   ?XSTACK_DISP0_8
   \   00013D   E5..         MOV     A,?V0 + 1
   \   00013F   F0           MOVX    @DPTR,A
    407            buff[5]='.';
   \   000140   740C         MOV     A,#0xc
   \   000142   12....       LCALL   ?XSTACK_DISP0_8
   \   000145   742E         MOV     A,#0x2e
   \   000147   F0           MOVX    @DPTR,A
    408            buff[6]=(int)(PH_Value*100)%100/10+'0';
   \   000148   EC           MOV     A,R4
   \   000149   F8           MOV     R0,A
   \   00014A   ED           MOV     A,R5
   \   00014B   F9           MOV     R1,A
   \   00014C   7A64         MOV     R2,#0x64
   \   00014E   7B00         MOV     R3,#0x0
   \   000150   12....       LCALL   ?S_DIV_MOD
   \   000153   EA           MOV     A,R2
   \   000154   F8           MOV     R0,A
   \   000155   EB           MOV     A,R3
   \   000156   F9           MOV     R1,A
   \   000157   7A0A         MOV     R2,#0xa
   \   000159   7B00         MOV     R3,#0x0
   \   00015B   12....       LCALL   ?S_DIV_MOD
   \   00015E   E8           MOV     A,R0
   \   00015F   2430         ADD     A,#0x30
   \   000161   F5..         MOV     ?V0 + 2,A
   \   000163   740D         MOV     A,#0xd
   \   000165   12....       LCALL   ?XSTACK_DISP0_8
   \   000168   E5..         MOV     A,?V0 + 2
   \   00016A   F0           MOVX    @DPTR,A
    409            buff[7]=(int)(PH_Value*100)%10+'0';
   \   00016B   EC           MOV     A,R4
   \   00016C   F8           MOV     R0,A
   \   00016D   ED           MOV     A,R5
   \   00016E   F9           MOV     R1,A
   \   00016F   7A0A         MOV     R2,#0xa
   \   000171   7B00         MOV     R3,#0x0
   \   000173   12....       LCALL   ?S_DIV_MOD
   \   000176   EA           MOV     A,R2
   \   000177   2430         ADD     A,#0x30
   \   000179   F8           MOV     R0,A
   \   00017A   740E         MOV     A,#0xe
   \   00017C   12....       LCALL   ?XSTACK_DISP0_8
   \   00017F   E8           MOV     A,R0
   \   000180   F0           MOVX    @DPTR,A
    410            
    411            PH_buff[0]=buff[3];
   \   000181   7402         MOV     A,#0x2
   \   000183   12....       LCALL   ?XSTACK_DISP0_8
   \   000186   E5..         MOV     A,?V0 + 0
   \   000188   F0           MOVX    @DPTR,A
    412            PH_buff[1]=buff[4];
   \   000189   7403         MOV     A,#0x3
   \   00018B   12....       LCALL   ?XSTACK_DISP0_8
   \   00018E   E5..         MOV     A,?V0 + 1
   \   000190   F0           MOVX    @DPTR,A
    413            PH_buff[2]=buff[5];
   \   000191   7404         MOV     A,#0x4
   \   000193   12....       LCALL   ?XSTACK_DISP0_8
   \   000196   742E         MOV     A,#0x2e
   \   000198   F0           MOVX    @DPTR,A
    414            PH_buff[3]=buff[6];
   \   000199   7405         MOV     A,#0x5
   \   00019B   12....       LCALL   ?XSTACK_DISP0_8
   \   00019E   E5..         MOV     A,?V0 + 2
   \   0001A0   F0           MOVX    @DPTR,A
    415            PH_buff[4]=buff[7];
   \   0001A1   7406         MOV     A,#0x6
   \   0001A3   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A6   E8           MOV     A,R0
   \   0001A7   F0           MOVX    @DPTR,A
    416          
    417            buff[8] ='T';
   \   0001A8   740F         MOV     A,#0xf
   \   0001AA   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AD   7454         MOV     A,#0x54
   \   0001AF   F0           MOVX    @DPTR,A
    418            buff[9] =':';
   \   0001B0   7410         MOV     A,#0x10
   \   0001B2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B5   743A         MOV     A,#0x3a
   \   0001B7   F0           MOVX    @DPTR,A
    419            buff[10] = temp/10+'0';//È¡³öÎÂ¶ÈµÄÕûÊý
   \   0001B8   75F00A       MOV     B,#0xa
   \   0001BB   EE           MOV     A,R6
   \   0001BC   84           DIV     AB
   \   0001BD   2430         ADD     A,#0x30
   \   0001BF   F8           MOV     R0,A
   \   0001C0   7411         MOV     A,#0x11
   \   0001C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C5   E8           MOV     A,R0
   \   0001C6   F0           MOVX    @DPTR,A
    420            buff[11] = temp%10+'0';
   \   0001C7   EE           MOV     A,R6
   \   0001C8   75F00A       MOV     B,#0xa
   \   0001CB   84           DIV     AB
   \   0001CC   E5F0         MOV     A,B
   \   0001CE   2430         ADD     A,#0x30
   \   0001D0   F9           MOV     R1,A
   \   0001D1   7412         MOV     A,#0x12
   \   0001D3   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D6   E9           MOV     A,R1
   \   0001D7   F0           MOVX    @DPTR,A
    421            
    422            Temp_buff[0]=buff[10];
   \   0001D8   E8           MOV     A,R0
   \   0001D9   85..82       MOV     DPL,?XSP + 0
   \   0001DC   85..83       MOV     DPH,?XSP + 1
   \   0001DF   F0           MOVX    @DPTR,A
    423            Temp_buff[1]=buff[11];
   \   0001E0   7401         MOV     A,#0x1
   \   0001E2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E5   E9           MOV     A,R1
   \   0001E6   F0           MOVX    @DPTR,A
    424            
    425              //lcd ÏÔÊ¾    
    426                       HalLcdWriteString( PH_buff, HAL_LCD_LINE_3 );
                                                 ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   0001E7                ; Setup parameters for call to function HalLcdWriteString
   \   0001E7   7903         MOV     R1,#0x3
   \   0001E9   7402         MOV     A,#0x2
   \   0001EB   12....       LCALL   ?XSTACK_DISP0_8
   \   0001EE   AA82         MOV     R2,DPL
   \   0001F0   AB83         MOV     R3,DPH
   \   0001F2   12....       LCALL   ??HalLcdWriteString?relay
    427                       HalLcdWriteString( Temp_buff, HAL_LCD_LINE_4 );
                                                 ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   0001F5                ; Setup parameters for call to function HalLcdWriteString
   \   0001F5   7904         MOV     R1,#0x4
   \   0001F7   85..82       MOV     DPL,?XSP + 0
   \   0001FA   85..83       MOV     DPH,?XSP + 1
   \   0001FD   AA82         MOV     R2,DPL
   \   0001FF   AB83         MOV     R3,DPH
   \   000201   12....       LCALL   ??HalLcdWriteString?relay
    428          
    429              //´®¿ÚÊä³ö
    430              HalUARTWrite(0, PH_buff, osal_strlen(PH_buff));
                                                          ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000204                ; Setup parameters for call to function HalUARTWrite
   \   000204                ; Setup parameters for call to function osal_strlen
   \   000204   7402         MOV     A,#0x2
   \   000206   12....       LCALL   ?XSTACK_DISP0_8
   \   000209   AA82         MOV     R2,DPL
   \   00020B   AB83         MOV     R3,DPH
   \   00020D   12....       LCALL   ??osal_strlen?relay
   \   000210   EA           MOV     A,R2
   \   000211   FC           MOV     R4,A
   \   000212   EB           MOV     A,R3
   \   000213   FD           MOV     R5,A
   \   000214   7402         MOV     A,#0x2
   \   000216   12....       LCALL   ?XSTACK_DISP0_8
   \   000219   AA82         MOV     R2,DPL
   \   00021B   AB83         MOV     R3,DPH
   \   00021D   7900         MOV     R1,#0x0
   \   00021F   12....       LCALL   ??HalUARTWrite?relay
    431              HalUARTWrite(0, "\r\n", 2);
   \   000222                ; Setup parameters for call to function HalUARTWrite
   \   000222   7C02         MOV     R4,#0x2
   \   000224   7D00         MOV     R5,#0x0
   \   000226   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   000228   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   00022A   7900         MOV     R1,#0x0
   \   00022C   12....       LCALL   ??HalUARTWrite?relay
    432              HalUARTWrite(0, Temp_buff, osal_strlen(Temp_buff));
                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"

    float tempFloat;   
          ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",390  Warning[Pe177]: 
          variable "tempFloat" was declared but never referenced

  static afAddrType_t SampleApp_TxAddr;
                      ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",129  Warning[Pe177]: 
          variable "SampleApp_TxAddr" was declared but never referenced

  static uint8 SampleApp_TxSeq;
               ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",130  Warning[Pe177]: 
          variable "SampleApp_TxSeq" was declared but never referenced

  static afAddrType_t SampleApp_RxAddr;
                      ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",134  Warning[Pe177]: 
          variable "SampleApp_RxAddr" was declared but never referenced

  static uint8 SampleApp_RxSeq;
               ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",135  Warning[Pe550]: 
          variable "SampleApp_RxSeq" was set but never used

  static uint8 SampleApp_RspBuf[SAMPLE_APP_RSP_CNT];
               ^
"E:\ÌÔ±¦µêÆÌ\¹èÐ¾µç×Ó\2.µêÆÌ²úÆ·\PH´«¸ÐÆ÷Ä£¿é\Code\zigbee cc2530²Î¿¼´úÂë£¨Ð­ÒéÕ»£©\ZStack-2.5.1a\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",136  Warning[Pe177]: 
          variable "SampleApp_RspBuf" was declared but never referenced
   \   00022F                ; Setup parameters for call to function HalUARTWrite
   \   00022F                ; Setup parameters for call to function osal_strlen
   \   00022F   85..82       MOV     DPL,?XSP + 0
   \   000232   85..83       MOV     DPH,?XSP + 1
   \   000235   AA82         MOV     R2,DPL
   \   000237   AB83         MOV     R3,DPH
   \   000239   12....       LCALL   ??osal_strlen?relay
   \   00023C   EA           MOV     A,R2
   \   00023D   FC           MOV     R4,A
   \   00023E   EB           MOV     A,R3
   \   00023F   FD           MOV     R5,A
   \   000240   85..82       MOV     DPL,?XSP + 0
   \   000243   85..83       MOV     DPH,?XSP + 1
   \   000246   AA82         MOV     R2,DPL
   \   000248   AB83         MOV     R3,DPH
   \   00024A   7900         MOV     R1,#0x0
   \   00024C   12....       LCALL   ??HalUARTWrite?relay
    433              HalUARTWrite(0, "\r\n", 2);
   \   00024F                ; Setup parameters for call to function HalUARTWrite
   \   00024F   7C02         MOV     R4,#0x2
   \   000251   7D00         MOV     R5,#0x0
   \   000253   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   000255   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   000257   7900         MOV     R1,#0x0
   \   000259   12....       LCALL   ??HalUARTWrite?relay
    434            
    435            //ÎÞÏß·¢ËÍµ½Ð­µ÷Æ÷
    436            if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    437                                 SAMPLEAPP_P2P_CLUSTERID,
    438                                 12,
    439                                 buff,
    440                                 &SampleApp_MsgID,
    441                                 AF_DISCV_ROUTE,
    442                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   00025C                ; Setup parameters for call to function AF_DataRequest
   \   00025C   75..1E       MOV     ?V0 + 0,#0x1e
   \   00025F   78..         MOV     R0,#?V0 + 0
   \   000261   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000264   75....       MOV     ?V0 + 0,#SampleApp_MsgID & 0xff
   \   000267   75....       MOV     ?V0 + 1,#(SampleApp_MsgID >> 8) & 0xff
   \   00026A   78..         MOV     R0,#?V0 + 0
   \   00026C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00026F   740A         MOV     A,#0xa
   \   000271   12....       LCALL   ?XSTACK_DISP0_8
   \   000274   8582..       MOV     ?V0 + 0,DPL
   \   000277   8583..       MOV     ?V0 + 1,DPH
   \   00027A   78..         MOV     R0,#?V0 + 0
   \   00027C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00027F   75..0C       MOV     ?V0 + 0,#0xc
   \   000282   75..00       MOV     ?V0 + 1,#0x0
   \   000285   78..         MOV     R0,#?V0 + 0
   \   000287   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00028A   75..01       MOV     ?V0 + 0,#0x1
   \   00028D   78..         MOV     R0,#?V0 + 0
   \   00028F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000292   7920         MOV     R1,#0x20
   \   000294   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000296   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000298   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   00029A   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   00029C   12....       LCALL   ??AF_DataRequest?relay
   \   00029F   7409         MOV     A,#0x9
   \   0002A1   12....       LCALL   ?DEALLOC_XSTACK8
    443            {
    444            }
    445            else
    446            {
    447              // Error occurred in request to send.
    448            }
    449          }
   \   0002A4   7414         MOV     A,#0x14
   \   0002A6   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002A9   7F08         MOV     R7,#0x8
   \   0002AB   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SampleApp_epDesc>`:
   \   000000   0B           DB 11
   \   000001   ....         DW SampleApp_TaskID
   \   000003   ....         DW SampleApp_SimpleDesc
   \   000005   00           DB 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GetPH?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GetPH

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_P2P_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_P2P_Message

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n">`:
   \   000000   0D0A00       DB "\015\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_2`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00000000     DB 0, 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_3`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_4`:
   \   000000   00           DB 0
   \   000001   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40533333:
   \   000000   33335340     DD 40533333H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_457ff000:
   \   000000   00F07F45     DD 457FF000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0b82196:
   \   000000   9621B8C0     DD 0C0B82196H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_41853b64:
   \   000000   643B8541     DD 41853B64H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_1:
   \   000000   01000000     DD 1H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_41600001:
   \   000000   01006041     DD 41600001H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80000:
   \   000000   0000C842     DD 42C80000H
    450          
    451          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       2      0     36  GetPH
                          2 0  0 -> HalAdcRead
       0      0     10  SampleApp_CallBack
                          0 0 10 -> HalUARTRead
       0      0     10  SampleApp_Init
                          0 0 10 -> MT_UartInit
                          0 0 10 -> MT_UartRegisterTaskID
                          0 0 10 -> RegisterForKeys
                          0 0 10 -> afRegister
       0      0     12  SampleApp_ProcessEvent
                          0 0 12 -> SampleApp_ProcessMSGCmd
                          0 0 12 -> SampleApp_Send_P2P_Message
                          0 0 12 -> osal_msg_deallocate
                          0 0 12 -> osal_msg_receive
                          0 0 12 -> osal_rand
                          0 0 12 -> osal_start_timerEx
       4      0     32  SampleApp_ProcessMSGCmd
                          2 0 20 -> HalLcdWriteString
                          2 0 20 -> HalUARTWrite
                          2 0 20 -> osal_strlen
       2      0     57  SampleApp_Send_P2P_Message
                          0 0 45 -> AF_DataRequest
                          0 0 36 -> GetPH
                          0 0 36 -> HalLcdWriteString
                          0 0 36 -> HalUARTWrite
                          0 0 36 -> ReadDs18B20
                          0 0 36 -> osal_strlen


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       3  ?<Constant "\r\n">
      10  ?<Constant {0}>
      10  ?<Constant {0}>_1
      13  ?<Constant {0}>_2
       5  ?<Constant {0}>_3
       2  ?<Constant {0}>_4
       6  ?<Initializer for SampleApp_epDesc>
       6  ??GetPH?relay
       6  ??SampleApp_CallBack?relay
       6  ??SampleApp_Init?relay
       6  ??SampleApp_ProcessEvent?relay
       6  ??SampleApp_ProcessMSGCmd?relay
       6  ??SampleApp_Send_P2P_Message?relay
       6  ??Subroutine9_0
       5  ?Subroutine0
       7  ?Subroutine1
       5  ?Subroutine2
       6  ?Subroutine3
       4  ?Subroutine4
      13  ?Subroutine5
       3  ?Subroutine6
      10  ?Subroutine7
      10  ?Subroutine8
      13  GetPH
       1  P0DIR
       1  P0SEL
      44  SampleApp_CallBack
       4  SampleApp_ClusterList
      12  SampleApp_Flash_DstAddr
     109  SampleApp_Init
       1  SampleApp_MsgID
       1  SampleApp_NwkState
      12  SampleApp_P2P_DstAddr
      12  SampleApp_Periodic_DstAddr
     143  SampleApp_ProcessEvent
     379  SampleApp_ProcessMSGCmd
       1  SampleApp_RxSeq
     686  SampleApp_Send_P2P_Message
      12  SampleApp_SimpleDesc
       1  SampleApp_TaskID
      81  SampleApp_TxBuf
       1  SampleApp_TxLen
       6  SampleApp_epDesc
       1  _A_P0
       4  __Constant_1
       4  __Constant_40533333
       4  __Constant_41600001
       4  __Constant_41853b64
       4  __Constant_42c80000
       4  __Constant_457ff000
       4  __Constant_c0b82196

 
 1 443 bytes in segment BANKED_CODE
    36 bytes in segment BANK_RELAYS
     3 bytes in segment SFR_AN
     6 bytes in segment XDATA_I
     6 bytes in segment XDATA_ID
    87 bytes in segment XDATA_ROM_C
   122 bytes in segment XDATA_Z
 
 1 485 bytes of CODE  memory
    59 bytes of CONST memory (+ 28 bytes shared)
     0 bytes of DATA  memory (+  3 bytes shared)
   128 bytes of XDATA memory

Errors: none
Warnings: 18
